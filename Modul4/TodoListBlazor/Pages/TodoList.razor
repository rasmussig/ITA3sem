@page "/fetchdata"

@using TodoListBlazor.Data;
@inject TodoListService todoService

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<PageTitle>The Todo List</PageTitle>

<h1>The Todo List</h1>

@if (tasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ol>
        @foreach (var task in tasks)
        {
            <li>
                <TodoTask Task=@task></TodoTask>
                <button @onclick="() => StartEditingTask(task)">Rediger</button>
                @if (editingTask == task)
                {
                    <EditTask Task="@editingTask"></EditTask>
                }
            </li>
        }
    </ol>
}

<PostTask />

@code {
    private TaskData[]? tasks;
    // Variabel som indeholder den opdaterede task
    private TaskData? editingTask;


    protected override async Task OnInitializedAsync()
    {
        tasks = await todoService.GetTaskData();
        todoService.RefreshRequired += this.RefreshMe;
    }  

     private void StartEditingTask(TaskData task)
    {
        editingTask = task;
    }
    
    private async void RefreshMe()
    {
        tasks = await todoService.GetTaskData();
        StateHasChanged();
        Console.WriteLine("Refreshed");
    }  
}
